mongo    // Inicializacion de mongo
show databases    // Chequeo de bases de datos creadas y disponibles
------------------------------------------------------------
 MENSAJES

 use mensajes    // Creacion y acceso a coleccion "mensajes"
db.dropDatabase()    // Borramos todo lo que tiene dentro

db.mensajes.insertMany([
    {
    "date": "23-05-2023",
    "mail": "qwert@gmail.com",
    "sms": "dale"
}, {
    "date": "23-05-2023",
    "mail": "adaff@gmail.com",
    "sms": "ahiva"
}, {
    "date": "23-05-2023",
    "mail": "czxcxvcvgmail.com",
    "sms": "gg w"
}, {
    "date": "23-05-2023",
    "mail": "hjguyti@gmail.com",
    "sms": "pofavo"
}, {
    "date": "23-05-2023",
    "mail": "juju@gmail.com",
    "sms": "quiero una remera"
}, {
    "date": "23-05-2023",
    "mail": "asdasqwerty@gmail.com",
    "sms": "aaaaaa"
}, {
    "date": "23-05-2023",
    "mail": "proprerty@gmail.com",
    "sms": "sadfgy"
}, {
    "date": "23-05-2023",
    "mail": "calloftculhul@gmail.com",
    "sms": "holi"
}, {
    "date": "23-05-2023",
    "mail": "juabnjose@gmail.com",
    "sms": "mens"
}, {
    "date": "23-05-2023",
    "mail": "juancru@gmail.com",
    "sms": "ultima"
}])    // Mensajes insertados

--------------------------------------------------------------
 PRODUCTOS

use productos    // Creacion y acceso a coleccion "productos"
db.dropDatabase()    // Borramos todo lo que tiene dentro

db.productos.insertMany([
    {
    "title": "Remera Balenciaga",
    "price": 5000,
    "stock": 50
}, {
    "title": "Remera Levis",
    "price": 4500,
    "stock": 500
}, {
    "title": "Remera Ona Saez",
    "price": 3550,
    "stock": 168
}, {
    "title": "Remera Zara",
    "price": 3890,
    "stock": 110
}, {
    "title": "Remera Volcom",
    "price": 2000,
    "stock": 500
}, {
    "title": "Remera Nike",
    "price": 2300,
    "stock": 230
}, {
    "title": "Remera Puma",
    "price": 2450,
    "stock": 99
}, {
    "title": "Remera Under Armour",
    "price": 1090,
    "stock": 45
}, {
    "title": "Remera Umbro",
    "price": 1000,
    "stock": 80
}, {
    "title": "Remera Diadora",
    "price": 990,
    "stock": 500
}])    // Productos insertados

-----------------------------------------------------------------
// Mostrar todos los documentos de las colecciones

db.mensajes.find()
db.productos.find()

// Mostrar la cantidad de documentos de cada colecciones

db.mensajes.countDocuments()
db.productos.countdocuments()

---------------------------------------------------------------
 CRUD

 // Agregar un producto en la coleccion de productos

db.productos.insertOne({"name":"nuevo Producto","price":4800,"src":"new/route"})

// Consultas

 - Listar los productos con precio menor a 1000 pesos

db.productos.find({"price" : {$lt : 1000}})

 - Listar los productos con precio entre los 1000 a 3000 pesos

db.productos.find({"price" : {$gte : 1000 , $lte : 3000}})

 - Listar los productos con precio mayor a 3000 pesos

db.productos.find({"price" : {$gt : 3000}})

 - Realizar una consulta que traiga sólo el nombre del tercer producto más barato

db.productos.find({},{_id:0,"name":1}).sort({"price":1}).limit(1).skip(2)
!! Para probar que el resultado es el correcto, el siguiente comando muestra la lista de 
   todos los elementos ordenados por precios pero solo con sus nombres
    - db.productos.find({},{_id:0,"name":1}).sort({"price":1})

 - Hacer una actualización sobre todos los productos, agregando el campo stock a todos
ellos con un valor de 100.

db.productos.updateMany({}, {$set :{"stock" : 100}})
db.productos.find()

 - Cambiar el stock a cero de los productos con precios mayores a 4000 pesos.

db.productos.updateMany({"price" : {$gt : 4000}}, {$set :{"stock" : 0}})

 - Borrar los productos con precio menor a 1000 pesos

db.productos.deleteMany({"price" : {$lt : 1000}})

---------------------------------------------------------------
Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce.
Verificar que pepe no pueda cambiar la información.

use admin
db.createUser({
  user : "pepe",
  pwd : "asd456",
  roles : [
    {role :"read", db:"products"},
    {role :"read", db:"mensajes"}
  ]
})